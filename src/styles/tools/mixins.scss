/**
 * Sets a media query for the specified breakpoint
 *
 * Accepts:
 * - $media-query: {String} Breakpoint variable (list found in variables.scss)
 *
 * Usage:
 * .selector {
 *   @include media-query($medium-up) {
 *     color: red;
 *   }
 * }
 */
@mixin media-query($media-query) {
  $breakpoint-found: false;

  @each $breakpoint in $breakpoints {
    $name: nth($breakpoint, 1);
    $declaration: nth($breakpoint, 2);

    @if $media-query == $name and $declaration {
      $breakpoint-found: true;

      @media only screen and #{$declaration} {
        @content;
      }
    }
  }
}

@mixin media-min-size($screen-type) {
  @media only screen and (min-width: $screen-type) {
    @content;
  }
}

/**
* Keyframe creators - creates a 'namespaced' keyframes object with the settings configured from args.
*/
@mixin createFadeKeyFrames ($instanceName, $startOpacity, $endOpacity) {
  @keyframes #{$instanceName} {
    0% {
      opacity: $startOpacity;
    }
    100% {
      opacity: $endOpacity;
    }
  }
}

@mixin createSlideKeyFrames (
  $instanceName,
  $slideStartX: 0,
  $slideStartY: 0,
  $slideEndX: 0,
  $slideEndY: 0
  ) {
    @keyframes #{$instanceName} {
      0% {
        transform: translate($slideStartX, $slideStartY);
      }
      100% {
        transform: translate($slideEndX, $slideEndY);
      }
    }
}

/**
 * Outputs list of transition properties
 *
 * Accepts:
 * - $transitions: {String} List of transition properties to set
 *
 * Usage:
 * .selector {
 *   @include transition(width, height 0.5s ease-in);
 * }
 */
@mixin transition($transitions...) {
  $output: ();

  @each $transition in $transitions {
    $output: append($output, get-transition-properties($transition), comma);
  }
  transition: $output;
}

/**
 * Forces an element to self-clear its children
 *
 * Usage:
 * .selector {
 *   @include clearfix;
 * }
 */
@mixin clearfix() {
  &::after {
    content: '';
    display: table;
    clear: both;
  }

  // stylelint-disable-next-line
  *zoom: 1;
}

/**
 * Hide element but make it accessible to screen readers
 *
 * Usage:
 * .selector {
 *   @include visually-hidden;
 * }
 */
@mixin visually-hidden() {
  // stylelint-disable-next-line
  position: absolute !important;
  overflow: hidden;
  width: 1px;
  height: 1px;
  margin: -1px;
  padding: 0;
  border: 0;
  clip: rect(0 0 0 0);
}

/**
 * Reverse the properties applied by @mixin visually-hidden
 *
 * Accepts:
 * - $position: {String} Positioning method for element
 *
 * Usage:
 * .selector {
 *   @include visually-shown(relative);
 * }
 */
@mixin visually-shown($position: inherit) {
  // stylelint-disable-next-line
  position: $position !important;
  overflow: auto;
  width: auto;
  height: auto;
  margin: 0;
  clip: auto;
}

/**
 * Styling for a card.
 */
@mixin card {
  padding: 10px 20px;
  background: $color-product-info-bg;
  text-align: center;
  color: $color-body-text-2;
  box-shadow: 0 1px 2px 1px rgba(0, 0, 0, 0.1);
  border: 1px solid #f9f9f9;
  border-radius: 4px;
  box-sizing: border-box;
}

/**
 * Styling for buttons.
 */
@mixin btn {
   padding: 10px 14px;
   display: flex;
   justify-content: center;
   align-items: center;
   border-radius: 4px;
}

@mixin primary-btn {
  @include btn;
  background: $color-main-green;
  color: white;
  span { padding: 0 5px; }
}

@mixin secondary-btn {
  @include btn;
  border: 1px solid $color-main-light-grey;
  background: white;
  color: #006b5b;
  &:hover {
    color: white;
    background: #006b5b;
  }
}

@mixin cancel-btn {
  @include btn;
  border: 1px solid $color-main-grey;
  background: white;
  color: $color-main-grey;
  &:hover {
    color: white;
    background: $color-main-grey;
  }
}

@mixin delete-btn {
  @include btn;
  border: 1px solid $color-main-red;
  background: white;
  color: $color-main-red;
  &:hover {
    color: white;
    background: $color-main-red;
  }
}

@mixin checkout-btn {
  @include btn;
  background: $color-main-black;
  color: white;
  span { padding: 0 5px; }
  &:hover {
    background: black;
  }
}

/**
 * Styling for text links.
 */
@mixin link {
  text-decoration: none;
  border-bottom: 1px solid transparent;
  transition: border-color 0.4s;
}

@mixin text-link {
  @include link;
  color: $color-main-green;
  &:hover {
    border-color: $color-main-green;
  }
}

@mixin text-link-alt {
  @include link;
  color: $color-main-gold;
  &:hover {
    border-color: $color-main-gold;
  }
}


/**
 * Sitewide form styling.
 * @param $has-icons: Adds styling to position icons on the left hand side of inputs.
 */
 @mixin standard-form($has-icons: false) {
   display: flex;
   flex-direction: column;
   align-items: center;
   .errors {
     color: $login-form-red;
     ul { list-style: none; margin: 10px; padding: 5px; }
   }
   label {
     color: $login-form-primary;
     position: absolute;
     opacity: 0;
     transition: opacity 0.6s;
     font-size: 0.9em;
     left: 4px;
     &.show-input-label {
       opacity: 1;
     }
   }
   i {
     position: absolute;
     color: $login-form-primary;
     position: absolute;
     bottom: 15%;
     left: 5px;
   }
   input {
     height: 50px;
     padding: 10px;
     @if $has-icons == true {
       padding-left: 35px;
     }
     border: none;
     border-bottom: 1px solid grey;
     transition: border-color 0.4s;
     &::placeholder {
       font-size: 0.9em;
       transition: color 0.4s;
     }
     &:focus {
       border-color: $login-form-primary;
       &::placeholder {
         color: $login-form-primary;
       }
     }
   }
   input[type='submit'] {
     @include primary-btn;
   }
   select {
     padding: 20px;
     margin: 20px;
   }
 }

/**
  * Responsive grid for displaying products cards or similar.
 */
 @mixin products-grid {
   display: flex;
   flex-wrap: wrap;
   justify-content: space-around;
   padding: 10px;
   &__product-link {
     text-decoration: none;
     color: $color-body-text-1;
     padding: 12px 2px;
     width: 100%;
     @include media-min-size($screen-tablet) {
       width: calc(100% / 2 - 5px);
     }
     @include media-min-size($screen-medium) {
       width: calc(100% / 3 - 5px);
     }
   }
 }
